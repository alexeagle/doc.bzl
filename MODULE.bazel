module(name = "doc.bzl")

bazel_dep(name = "bazel_skylib", version = "0.0.0")
bazel_dep(name = "aspect_bazel_lib", version = "2.19.2")
bazel_dep(name = "aspect_rules_esbuild", version = "0.22.1")
bazel_dep(name = "aspect_rules_lint", version = "1.4.4")
# bazel_dep(name = "aspect_rules_jasmine", version = "2.0.0")
bazel_dep(name = "aspect_rules_js", version = "2.3.7")
bazel_dep(name = "aspect_rules_ts", version = "3.6.3")
# bazel_dep(name = "aspect_rules_py", version = "1.6.0")
bazel_dep(name = "aspect_rules_swc", version = "2.4.3")
bazel_dep(name = "awk.bzl", version = "0.1.2")
bazel_dep(name = "bazel_env.bzl", version = "0.4.0")
bazel_dep(name = "jq.bzl", version = "0.1.0")
# bazel_dep(name = "rules_apko", version = "1.4.2")
# bazel_dep(name = "rules_angular", version = "0.1.1")
# bazel_dep(name = "rules_distroless", version = "0.5.1")
# bazel_dep(name = "rules_go", version = "0.55.1")
bazel_dep(name = "rules_multitool", version = "1.3.0")
# bazel_dep(name = "rules_nodejs", version = "6.4.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
# bazel_dep(name = "rules_rust", version = "0.61.0")
bazel_dep(name = "rules_shell", version = "0.5.0")
bazel_dep(name = "tar.bzl", version = "0.3.3")
# bazel_dep(name = "toolchains_llvm", version = "1.4.0")
bazel_dep(name = "with_cfg.bzl", version = "0.11.0")
bazel_dep(name = "yq.bzl", version = "0.1.1")

single_version_override(
    module_name = "bazel_skylib",
    patch_strip = 1,
    patches = [
        # We need https://github.com/bazelbuild/bazel-skylib/pull/571
        "//:patches/bazel_skylib.patch",
    ],
    version = "1.7.1",
)

single_version_override(
    module_name = "rules_multitool",
    version = "1.3.0",
    patch_strip = 1,
    patches = [
        "//:patches/rules_multitool.patch",
    ],
)

single_version_override(
    module_name = "aspect_rules_js",
    version = "2.3.7",
    patch_strip = 1,
    patches = [
        "//:patches/aspect_rules_js.patch",
    ],
)

single_version_override(
    module_name = "aspect_rules_esbuild",
    version = "0.22.1",
    patch_strip = 1,
    patches = [
        "//:patches/aspect_rules_esbuild.patch",
    ],
)

single_version_override(
    module_name = "aspect_rules_lint",
    version = "1.4.4",
    patch_strip = 1,
    patches = [
        "//:patches/aspect_rules_lint.patch",
    ],
)

single_version_override(
    module_name = "rules_oci",
    version = "2.2.6",
    patch_strip = 1,
    patches = [
        "//:patches/rules_oci.patch",
    ],
)

# TEMP: pick up stardoc fixes
git_override(
    module_name = "awk.bzl",
    commit = "06bde3b32d19cf6c7d39ebed75062143ff1133c8",
    remote = "https://github.com/alexeagle/awk.bzl.git",
)

# git_override(
#     module_name = "rules_angular",
#     commit = "845ffcd8231832abdcfd6a47211b2feb4d178d7b",
#     remote = "https://github.com/devversion/rules_angular.git",
# )

multitool = use_extension("@rules_multitool//multitool:extension.bzl", "multitool")
multitool.hub(lockfile = "//tools:tools.lock.json")
use_repo(multitool, "multitool")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to run the same pnpm version that Bazel manages
use_repo(pnpm, "pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")

rules_db = use_repo_rule("//:rules.bzl", "rules_db")
rules_db(name = "rules___db", database = "//:rules.json", blocklist = "//:broken_libs.txt")
