{
  "$schema": "./rules.schema.json",
  "modules": [
    {
      "name": "aspect_bazel_lib",
      "bzl_library_targets": [
        "lib:base64",
        "lib:bats",
        "lib:bazelrc_presets",
        "lib:copy_directory",
        "lib:copy_file",
        "lib:copy_to_bin",
        "lib:copy_to_directory",
        "lib:diff_test",
        "lib:directory_path",
        "lib:docs",
        "lib:expand_make_vars",
        "lib:expand_template",
        "lib:extensions",
        "lib:glob_match",
        "lib:host_repo",
        "lib:jq",
        "lib:lists",
        "lib:output_files",
        "lib:params_file",
        "lib:paths",
        "lib:platform_utils",
        "lib:repo_utils",
        "lib:repositories",
        "lib:resource_sets",
        "lib:run_binary",
        "lib:stamping",
        "lib:strings",
        "lib:tar",
        "lib:testing",
        "lib:transitions",
        "lib:utils",
        "lib:windows_utils",
        "lib:write_source_files",
        "lib:yq",
        "tools:integrity",
        "tools:version"
      ]
    },
    {
      "name": "aspect_rules_cypress",
      "bzl_library_targets": [
        "cypress:defs",
        "cypress:repositories",
        "cypress:toolchain"
      ]
    },
    {
      "name": "aspect_rules_esbuild",
      "bzl_library_targets": [
        "esbuild:defs",
        "esbuild:repositories",
        "esbuild:toolchain"
      ]
    },
    {
      "name": "aspect_rules_js",
      "bzl_library_targets": [
        "contrib/nextjs:defs",
        "js:defs",
        "js:libs",
        "js:providers",
        "js:repositories",
        "npm:defs",
        "npm:libs",
        "npm:providers",
        "npm:repositories"
      ]
    },
    {
      "name": "aspect_rules_lint",
      "bzl_library_targets": [
        "format:defs",
        "format:repositories",
        "lint:buf",
        "lint:checkstyle",
        "lint:clang_tidy",
        "lint:eslint",
        "lint:flake8",
        "lint:keep_sorted",
        "lint:ktlint",
        "lint:lint_test",
        "lint:pmd",
        "lint:ruff",
        "lint:ruff_versions",
        "lint:shellcheck",
        "lint:spotbugs",
        "lint:stylelint",
        "lint:vale",
        "lint:vale_library",
        "lint:vale_versions"
      ]
    },
    {
      "name": "aspect_rules_swc",
      "bzl_library_targets": [
        "examples/source_map_support:defs",
        "swc:defs",
        "swc:dependencies",
        "swc:extensions",
        "swc:providers",
        "swc:repositories",
        "swc:toolchain"
      ]
    },
    {
      "name": "aspect_rules_ts",
      "bzl_library_targets": [
        "ts:defs",
        "ts:extensions",
        "ts:proto",
        "ts:repositories"
      ]
    },
    {
      "name": "awk.bzl",
      "bzl_library_targets": [
        "awk:awk"
      ]
    },
    {
      "name": "bazel_env.bzl",
      "bzl_library_targets": [
        ":bazel_env"
      ]
    },
    {
      "name": "bazel_skylib",
      "bzl_library_targets": [
        ":bzl_library",
        ":lib",
        ":version",
        ":workspace",
        "lib:collections",
        "lib:dicts",
        "lib:modules",
        "lib:new_sets",
        "lib:old_sets",
        "lib:partial",
        "lib:paths",
        "lib:selects",
        "lib:sets",
        "lib:shell",
        "lib:structs",
        "lib:subpackages",
        "lib:types",
        "lib:unittest",
        "lib:versions",
        "rules:analysis_test",
        "rules:build_test",
        "rules:common_settings",
        "rules:copy_directory",
        "rules:copy_file",
        "rules:diff_test",
        "rules:expand_template",
        "rules:native_binary",
        "rules:run_binary",
        "rules:select_file",
        "rules:write_file",
        "rules/directory:directory",
        "rules/directory:glob",
        "rules/directory:providers",
        "rules/directory:subdirectory"
      ]
    },
    {
      "name": "jq.bzl",
      "bzl_library_targets": [
        "jq:jq"
      ]
    },
    {
      "name": "rules_multitool",
      "bzl_library_targets": [
        "multitool:extension",
        "multitool:multitool"
      ]
    },
    {
      "name": "rules_oci",
      "bzl_library_targets": [
        "cosign:defs",
        "cosign:repositories",
        "cosign:toolchain",
        "oci:defs",
        "oci:dependencies",
        "oci:extensions",
        "oci:pull",
        "oci:repositories",
        "oci:toolchain"
      ]
    },
    {
      "name": "rules_shell",
      "bzl_library_targets": [
        "shell:rules_bzl"
      ]
    },
    {
      "name": "tar.bzl",
      "bzl_library_targets": [
        ":tar",
        "tar:mtree",
        "tar:tar"
      ]
    },
    {
      "name": "with_cfg.bzl",
      "bzl_library_targets": [
        ":with_cfg",
        "with_cfg:defs"
      ]
    },
    {
      "name": "yq.bzl",
      "bzl_library_targets": [
        "yq:yq"
      ]
    }
  ]
}
